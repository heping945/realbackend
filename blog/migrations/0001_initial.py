# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2019-08-30 16:24
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='分类名')),
                ('slug', models.SlugField(blank=True, max_length=40, verbose_name='slug')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_cat', to='blog.Category', verbose_name='父级分类')),
            ],
            options={
                'verbose_name': '分类',
                'verbose_name_plural': '分类',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='标题', max_length=200, unique=True, verbose_name='标题')),
                ('body', ckeditor.fields.RichTextField(help_text='正文', verbose_name='正文')),
                ('body_md', models.TextField(blank=True, help_text='正文.md', null=True, verbose_name='正文.md')),
                ('excerpt', models.CharField(blank=True, help_text='摘要', max_length=200, verbose_name='摘要')),
                ('codestyle', models.CharField(blank=True, default='monokai', help_text='md代码风格', max_length=24, null=True, verbose_name='代码风格')),
                ('reproduce', models.BooleanField(default=False, help_text='是否转载', verbose_name='是否转载')),
                ('reproduce_source', models.CharField(blank=True, help_text='转载来源地址', max_length=256, null=True, verbose_name='转载来源地址')),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('mod_date', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
                ('views_count', models.PositiveIntegerField(default=0, help_text='浏览量', verbose_name='浏览量')),
                ('can_comment', models.BooleanField(default=True, help_text='是否可以评论', verbose_name='是否可以评论')),
                ('comment_count', models.PositiveIntegerField(default=0, help_text='评论数', verbose_name='评论数')),
                ('upvote_count', models.PositiveIntegerField(default=0, help_text='点赞数', verbose_name='点赞数')),
                ('author', models.ForeignKey(help_text='文章作者', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
                ('category', models.ForeignKey(help_text='文章分类', on_delete=django.db.models.deletion.CASCADE, to='blog.Category', verbose_name='分类')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='标签名')),
                ('slug', models.SlugField(blank=True, max_length=40, verbose_name='slug')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='文章标签', to='blog.Tag', verbose_name='标签'),
        ),
    ]
